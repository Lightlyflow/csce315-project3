window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "api", "modulename": "api", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.app", "modulename": "api.app", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.app.app", "modulename": "api.app", "qualname": "app", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Flask &#x27;api.app&#x27;&gt;"}, {"fullname": "api.app.docs", "modulename": "api.app", "qualname": "docs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.auth", "modulename": "api.auth", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.auth.blueprint", "modulename": "api.auth", "qualname": "blueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;auth&#x27;&gt;"}, {"fullname": "api.auth.loginManager", "modulename": "api.auth", "qualname": "loginManager", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;flask_login.login_manager.LoginManager object&gt;"}, {"fullname": "api.auth.auth", "modulename": "api.auth.auth", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.auth.auth.authBlueprint", "modulename": "api.auth.auth", "qualname": "authBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;auth&#x27;&gt;"}, {"fullname": "api.auth.auth.loginManager", "modulename": "api.auth.auth", "qualname": "loginManager", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;flask_login.login_manager.LoginManager object&gt;"}, {"fullname": "api.auth.auth.load_user", "modulename": "api.auth.auth", "qualname": "load_user", "kind": "function", "doc": "<p>Creates User object from given user_id. Return User object if successful.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user_id</span></span><span class=\"return-annotation\">) -> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">User</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.auth.auth.unauthorized_callback", "modulename": "api.auth.auth", "qualname": "unauthorized_callback", "kind": "function", "doc": "<p>Redirects to customer home page when user attempts an unauthorized action.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.auth.auth.home", "modulename": "api.auth.auth", "qualname": "home", "kind": "function", "doc": "<p>Renders customer landing page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.auth.auth.logout", "modulename": "api.auth.auth", "qualname": "logout", "kind": "function", "doc": "<p>Redirects to customer home page when user logs out.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.auth.auth.oauth2_authorize", "modulename": "api.auth.auth", "qualname": "oauth2_authorize", "kind": "function", "doc": "<p>Authorizes user.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.auth.auth.oauth2_callback", "modulename": "api.auth.auth", "qualname": "oauth2_callback", "kind": "function", "doc": "<p>Logs in user.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">provider</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.auth.auth.loginAs", "modulename": "api.auth.auth", "qualname": "loginAs", "kind": "function", "doc": "<p>Logs in user as employee or manager.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.auth.auth_helper", "modulename": "api.auth.auth_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.auth.auth_helper.getUserByEmail", "modulename": "api.auth.auth_helper", "qualname": "getUserByEmail", "kind": "function", "doc": "<p>Returns User from their associated email if it exists</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">User</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.auth.auth_helper.userEmailExists", "modulename": "api.auth.auth_helper", "qualname": "userEmailExists", "kind": "function", "doc": "<p>Checks if email exists in the database</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.auth.auth_helper.createUser", "modulename": "api.auth.auth_helper", "qualname": "createUser", "kind": "function", "doc": "<p>Creates a user from given email. Returns sser object</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">User</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.auth.user", "modulename": "api.auth.user", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.auth.user.User", "modulename": "api.auth.user", "qualname": "User", "kind": "class", "doc": "<p>A user that exists as an employee or a user. Email is the main identifier. ASSUMES EMAIL EXISTS!!!</p>\n", "bases": "flask_login.mixins.UserMixin"}, {"fullname": "api.auth.user.User.__init__", "modulename": "api.auth.user", "qualname": "User.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">_email</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "api.auth.user.User.id", "modulename": "api.auth.user", "qualname": "User.id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "api.auth.user.User.userID", "modulename": "api.auth.user", "qualname": "User.userID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "api.auth.user.User.email", "modulename": "api.auth.user", "qualname": "User.email", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "api.auth.user.User.username", "modulename": "api.auth.user", "qualname": "User.username", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "api.auth.user.User.isEmployee", "modulename": "api.auth.user", "qualname": "User.isEmployee", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "api.auth.user.User.isManager", "modulename": "api.auth.user", "qualname": "User.isManager", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "api.auth.user.User.isAdmin", "modulename": "api.auth.user", "qualname": "User.isAdmin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "api.auth.user.User.employeeId", "modulename": "api.auth.user", "qualname": "User.employeeId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "api.auth.user.User.employeeName", "modulename": "api.auth.user", "qualname": "User.employeeName", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "api.auth.user.User.preferredName", "modulename": "api.auth.user", "qualname": "User.preferredName", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "api.auth.user.User.getEmployeeStatus", "modulename": "api.auth.user", "qualname": "User.getEmployeeStatus", "kind": "function", "doc": "<p>Populates isEmployee, employeeID, isManager.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.auth.user.User.getUserStatus", "modulename": "api.auth.user", "qualname": "User.getUserStatus", "kind": "function", "doc": "<p>Populates userID, username.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.customer", "modulename": "api.customer", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.customer.blueprint", "modulename": "api.customer", "qualname": "blueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;customer&#x27;&gt;"}, {"fullname": "api.customer.customer", "modulename": "api.customer.customer", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.customer.customer.customerBlueprint", "modulename": "api.customer.customer", "qualname": "customerBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;customer&#x27;&gt;"}, {"fullname": "api.customer.customer.home", "modulename": "api.customer.customer", "qualname": "home", "kind": "function", "doc": "<p>Renders the customer landing page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.customer.customer.order", "modulename": "api.customer.customer", "qualname": "order", "kind": "function", "doc": "<p>Stores menu item, category, topping, time and user order data before rendering the customer home page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.customer.customer.receive_saved_items", "modulename": "api.customer.customer", "qualname": "receive_saved_items", "kind": "function", "doc": "<p>Retrieves items that were previously saved in the cart.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.customer.customer_helper", "modulename": "api.customer.customer_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.customer.customer_helper.getMenuData", "modulename": "api.customer.customer_helper", "qualname": "getMenuData", "kind": "function", "doc": "<p>Returns all menu items from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.customer.customer_helper.getToppingData", "modulename": "api.customer.customer_helper", "qualname": "getToppingData", "kind": "function", "doc": "<p>Returns all topping names from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.customer.customer_helper.getMenuCategories", "modulename": "api.customer.customer_helper", "qualname": "getMenuCategories", "kind": "function", "doc": "<p>Returns all menu categories from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.customer.customer_helper.getCurrentTime", "modulename": "api.customer.customer_helper", "qualname": "getCurrentTime", "kind": "function", "doc": "<p>Returns the current time.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.customer.customer_helper.getUserOrders", "modulename": "api.customer.customer_helper", "qualname": "getUserOrders", "kind": "function", "doc": "<p>Retrieves orders for a specific user based on their associated email.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.customer.customer_helper.getToppingNames", "modulename": "api.customer.customer_helper", "qualname": "getToppingNames", "kind": "function", "doc": "<p>Returns all topping names from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"p\">[]</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.customer.customer_helper.placeOrder", "modulename": "api.customer.customer_helper", "qualname": "placeOrder", "kind": "function", "doc": "<p>Executes the placing of an order. Updates order table and inventory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">menuItems</span>, </span><span class=\"param\"><span class=\"n\">orderDate</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.customer.customer_helper.getWeather", "modulename": "api.customer.customer_helper", "qualname": "getWeather", "kind": "function", "doc": "<p>Retrieves the weather data for College Station.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db", "modulename": "api.db", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.db.auth_querier", "modulename": "api.db.auth_querier", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.db.auth_querier.getUserByEmail", "modulename": "api.db.auth_querier", "qualname": "getUserByEmail", "kind": "function", "doc": "<p>Returns user from database given their associated email.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.auth_querier.getUserById", "modulename": "api.db.auth_querier", "qualname": "getUserById", "kind": "function", "doc": "<p>Returns user from database given their associated ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">userId</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.auth_querier.addUser", "modulename": "api.db.auth_querier", "qualname": "addUser", "kind": "function", "doc": "<p>Adds user to database based on given email.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.auth_querier.getEmployeeByEmail", "modulename": "api.db.auth_querier", "qualname": "getEmployeeByEmail", "kind": "function", "doc": "<p>Returns employee from database given their associated email.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.auth_querier.emailExists", "modulename": "api.db.auth_querier", "qualname": "emailExists", "kind": "function", "doc": "<p>Checks if email exists in either users or employees. Returns [[0]] if not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier", "modulename": "api.db.customer_querier", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.db.customer_querier.getMenuItems", "modulename": "api.db.customer_querier", "qualname": "getMenuItems", "kind": "function", "doc": "<p>Retrieve all menu items from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.getMenuCategories", "modulename": "api.db.customer_querier", "qualname": "getMenuCategories", "kind": "function", "doc": "<p>Retrieve all menu categories from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.getToppingNames", "modulename": "api.db.customer_querier", "qualname": "getToppingNames", "kind": "function", "doc": "<p>Retrieve topping names from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.getMenuItemId", "modulename": "api.db.customer_querier", "qualname": "getMenuItemId", "kind": "function", "doc": "<p>Return a menu item ID based on its name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.getMenuItemComponents", "modulename": "api.db.customer_querier", "qualname": "getMenuItemComponents", "kind": "function", "doc": "<p>Return components of a menu item based on its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">menuItemId</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.getIngredientQuantityInventory", "modulename": "api.db.customer_querier", "qualname": "getIngredientQuantityInventory", "kind": "function", "doc": "<p>Return quantity of a specific inventory item based on its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inventoryId</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.getToppingId", "modulename": "api.db.customer_querier", "qualname": "getToppingId", "kind": "function", "doc": "<p>Return a topping ID based on its name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.setIngredientQuantityInventory", "modulename": "api.db.customer_querier", "qualname": "setIngredientQuantityInventory", "kind": "function", "doc": "<p>Set the quantity of an inventory item based on its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inventoryId</span>, </span><span class=\"param\"><span class=\"n\">quantity</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.subtractIngredientQuantityInventory", "modulename": "api.db.customer_querier", "qualname": "subtractIngredientQuantityInventory", "kind": "function", "doc": "<p>Subtract an ingredient quantity from inventory based on its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inventoryId</span>, </span><span class=\"param\"><span class=\"n\">quantity</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.getMaxOrderId", "modulename": "api.db.customer_querier", "qualname": "getMaxOrderId", "kind": "function", "doc": "<p>Retrieves the most recent order from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.getMaxUniqueId", "modulename": "api.db.customer_querier", "qualname": "getMaxUniqueId", "kind": "function", "doc": "<p>Retrieves the most recently ordered item from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.insertIntoOrderPartTable", "modulename": "api.db.customer_querier", "qualname": "insertIntoOrderPartTable", "kind": "function", "doc": "<p>Inserts a customer's item into the database.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">uniqueId</span>,</span><span class=\"param\">\t<span class=\"n\">orderId</span>,</span><span class=\"param\">\t<span class=\"n\">menuItemId</span>,</span><span class=\"param\">\t<span class=\"n\">topping1</span>,</span><span class=\"param\">\t<span class=\"n\">topping2</span>,</span><span class=\"param\">\t<span class=\"n\">topping3</span>,</span><span class=\"param\">\t<span class=\"n\">price</span>,</span><span class=\"param\">\t<span class=\"n\">sweetness</span>,</span><span class=\"param\">\t<span class=\"n\">ice</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.insertIntoOrderTable", "modulename": "api.db.customer_querier", "qualname": "insertIntoOrderTable", "kind": "function", "doc": "<p>Inserts an entire customer order into the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderId</span>, </span><span class=\"param\"><span class=\"n\">price</span>, </span><span class=\"param\"><span class=\"n\">email</span>, </span><span class=\"param\"><span class=\"n\">dateString</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.insertIntoOrderTableCurrent", "modulename": "api.db.customer_querier", "qualname": "insertIntoOrderTableCurrent", "kind": "function", "doc": "<p>Inserts an entire customer order into the database with the time of the order stored as the current time.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderId</span>, </span><span class=\"param\"><span class=\"n\">price</span>, </span><span class=\"param\"><span class=\"n\">email</span>, </span><span class=\"param\"><span class=\"n\">employeeId</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.getMenuItemPrice", "modulename": "api.db.customer_querier", "qualname": "getMenuItemPrice", "kind": "function", "doc": "<p>Return menu item's price based on its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">menuItemId</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.getToppingPrice", "modulename": "api.db.customer_querier", "qualname": "getToppingPrice", "kind": "function", "doc": "<p>Return a topping's price based on its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">toppingId</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.customer_querier.getOrderInfoForUser", "modulename": "api.db.customer_querier", "qualname": "getOrderInfoForUser", "kind": "function", "doc": "<p>Retrieves all orders for a specific user organized by date.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">email</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.employee_querier", "modulename": "api.db.employee_querier", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.db.employee_querier.clockIn", "modulename": "api.db.employee_querier", "qualname": "clockIn", "kind": "function", "doc": "<p>Creates new row with activity and start time for employee. Time is rounded to nearest 15 minutes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">activity</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.employee_querier.clockOut", "modulename": "api.db.employee_querier", "qualname": "clockOut", "kind": "function", "doc": "<p>Updates latest clockin row with clock out time. Time is rounded to nearest 15 minutes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.employee_querier.getWeek", "modulename": "api.db.employee_querier", "qualname": "getWeek", "kind": "function", "doc": "<p>Returns a week of activity for a specific employee based on their ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span>, </span><span class=\"param\"><span class=\"n\">billingPeriod</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.employee_querier.getOrders", "modulename": "api.db.employee_querier", "qualname": "getOrders", "kind": "function", "doc": "<p>Dates should be in the format YYYY-MM-DD. End date is non-inclusive</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">startDate</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.employee_querier.getOrderItemsByOrderID", "modulename": "api.db.employee_querier", "qualname": "getOrderItemsByOrderID", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.employee_querier.markOrder", "modulename": "api.db.employee_querier", "qualname": "markOrder", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.image_querier", "modulename": "api.db.image_querier", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.db.image_querier.addImage", "modulename": "api.db.image_querier", "qualname": "addImage", "kind": "function", "doc": "<p>Inserts an image into the database including which category it belongs to.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">publicID</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.image_querier.updateImage", "modulename": "api.db.image_querier", "qualname": "updateImage", "kind": "function", "doc": "<p>Only updates the images description and category by ID</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">imageID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.image_querier.deleteImage", "modulename": "api.db.image_querier", "qualname": "deleteImage", "kind": "function", "doc": "<p>Only deletes image from db.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">imageID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.image_querier.getImages", "modulename": "api.db.image_querier", "qualname": "getImages", "kind": "function", "doc": "<p>Retrieves all images from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_payroll_querier", "modulename": "api.db.manager_payroll_querier", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.db.manager_payroll_querier.getTimesheet", "modulename": "api.db.manager_payroll_querier", "qualname": "getTimesheet", "kind": "function", "doc": "<p>Retrieves a table of all employee activity from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_payroll_querier.getTimesheetByID", "modulename": "api.db.manager_payroll_querier", "qualname": "getTimesheetByID", "kind": "function", "doc": "<p>Retrieves activity for a specific employee and billing period based on their ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">billingPeriod</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_payroll_querier.addTimesheetEntry", "modulename": "api.db.manager_payroll_querier", "qualname": "addTimesheetEntry", "kind": "function", "doc": "<p>Inserts an employee shift into the time sheet.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">activity</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">clockIn</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">clockOut</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_payroll_querier.updateTimesheetEntryByID", "modulename": "api.db.manager_payroll_querier", "qualname": "updateTimesheetEntryByID", "kind": "function", "doc": "<p>Updates the information of an employee shift based on their ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">entryID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">activity</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">clockIn</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">clockOut</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_payroll_querier.deleteTimesheetEntry", "modulename": "api.db.manager_payroll_querier", "qualname": "deleteTimesheetEntry", "kind": "function", "doc": "<p>Deletes an entry from the time sheet by ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">entryID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_payroll_querier.getPayRate", "modulename": "api.db.manager_payroll_querier", "qualname": "getPayRate", "kind": "function", "doc": "<p>Returns the pay rate for a specific employee based on their ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_payroll_querier.getEmployees", "modulename": "api.db.manager_payroll_querier", "qualname": "getEmployees", "kind": "function", "doc": "<p>Retrieves all employee names and their associated IDs from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_payroll_querier.getTotalHours", "modulename": "api.db.manager_payroll_querier", "qualname": "getTotalHours", "kind": "function", "doc": "<p>Returns an employee's total hours worked over a specific billing period based on their ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">billingPeriod</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier", "modulename": "api.db.manager_querier", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.db.manager_querier.getInventory", "modulename": "api.db.manager_querier", "qualname": "getInventory", "kind": "function", "doc": "<p>Retrieves all inventory items from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getLowStock", "modulename": "api.db.manager_querier", "qualname": "getLowStock", "kind": "function", "doc": "<p>Retrieves all inventory items that are low in stock from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.createIngredient", "modulename": "api.db.manager_querier", "qualname": "createIngredient", "kind": "function", "doc": "<p>Inserts a new ingredient into the inventory table.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.orderItem", "modulename": "api.db.manager_querier", "qualname": "orderItem", "kind": "function", "doc": "<p>Adds stock to a specific inventory item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.orderAllItems", "modulename": "api.db.manager_querier", "qualname": "orderAllItems", "kind": "function", "doc": "<p>Adds stock to all inventory items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.updateThreshold", "modulename": "api.db.manager_querier", "qualname": "updateThreshold", "kind": "function", "doc": "<p>Sets the restock threshold for a specific inventory item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.deleteItemByID", "modulename": "api.db.manager_querier", "qualname": "deleteItemByID", "kind": "function", "doc": "<p>Deletes an item from the inventory table based on its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inventoryID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.updateItemByID", "modulename": "api.db.manager_querier", "qualname": "updateItemByID", "kind": "function", "doc": "<p>Sets the quantity and restock threshold for a specific inventory item based on its ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">inventoryID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">quantity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">restockThreshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.addItemInventory", "modulename": "api.db.manager_querier", "qualname": "addItemInventory", "kind": "function", "doc": "<p>Inserts a new item into the inventory table along with its quantity and restock threshold.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">quantity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">restockThreshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getProductUsage", "modulename": "api.db.manager_querier", "qualname": "getProductUsage", "kind": "function", "doc": "<p>Retrieves the usage data for all inventory items over a specific time period.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">startDate</span>, </span><span class=\"param\"><span class=\"n\">endDate</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getPairFrequency", "modulename": "api.db.manager_querier", "qualname": "getPairFrequency", "kind": "function", "doc": "<p>Returns the pairs of menu items that are purchased together most often.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">startDate</span>, </span><span class=\"param\"><span class=\"n\">endDate</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getSalesHistory", "modulename": "api.db.manager_querier", "qualname": "getSalesHistory", "kind": "function", "doc": "<p>Retrieves store sales history over a specific time period.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">startDate</span>, </span><span class=\"param\"><span class=\"n\">endDate</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getExcessItems", "modulename": "api.db.manager_querier", "qualname": "getExcessItems", "kind": "function", "doc": "<p>Returns inventory items that did not sell as much as expected over a specific time period.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">startDate</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getMenuItems", "modulename": "api.db.manager_querier", "qualname": "getMenuItems", "kind": "function", "doc": "<p>Retrieves all menu items from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getIngredients", "modulename": "api.db.manager_querier", "qualname": "getIngredients", "kind": "function", "doc": "<p>Retrieves all ingredients from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">menuItemID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.addMenuItem", "modulename": "api.db.manager_querier", "qualname": "addMenuItem", "kind": "function", "doc": "<p>Inserts a new menu item into the menu items table.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">price</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">inStock</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">calories</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">imageID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.deleteMenuItem", "modulename": "api.db.manager_querier", "qualname": "deleteMenuItem", "kind": "function", "doc": "<p>Deletes an item from the menu items table.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">itemID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.updateMenuItem", "modulename": "api.db.manager_querier", "qualname": "updateMenuItem", "kind": "function", "doc": "<p>Updates the attributes of an existing menu item.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">price</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">inStock</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">calories</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">itemID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">imageID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.addIngredient", "modulename": "api.db.manager_querier", "qualname": "addIngredient", "kind": "function", "doc": "<p>Adds a new ingredient to the menu part table.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">menuItemID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">inventoryID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">quantity</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.deleteIngredient", "modulename": "api.db.manager_querier", "qualname": "deleteIngredient", "kind": "function", "doc": "<p>Deletes an ingredient from the menu part table.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">uniqueID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.updateIngredient", "modulename": "api.db.manager_querier", "qualname": "updateIngredient", "kind": "function", "doc": "<p>Sets the quantity of an ingredient based on its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">quantity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">ingredientID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getIngredientInventoryID", "modulename": "api.db.manager_querier", "qualname": "getIngredientInventoryID", "kind": "function", "doc": "<p>Returns an ingredients ID based on its name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getMenuItemCategories", "modulename": "api.db.manager_querier", "qualname": "getMenuItemCategories", "kind": "function", "doc": "<p>Gets categories of menu items, sorted by priority (if any priority)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.addCategories", "modulename": "api.db.manager_querier", "qualname": "addCategories", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>categories</strong>:  Must be of form ('category1', -1), ...., (categoryN, -1). Inserts into db only if category doesn't exist.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">categories</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.updateCategories", "modulename": "api.db.manager_querier", "qualname": "updateCategories", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>categories</strong>:  Must be of form ('category1', int(priority)), ..., ('categoryN', int(priority))</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">categories</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.removeUnusedCategories", "modulename": "api.db.manager_querier", "qualname": "removeUnusedCategories", "kind": "function", "doc": "<p>Removes categories from category_priority if they don't appear in menu_items_table.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getUsers", "modulename": "api.db.manager_querier", "qualname": "getUsers", "kind": "function", "doc": "<p>Retrieves all user data from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getEmployees", "modulename": "api.db.manager_querier", "qualname": "getEmployees", "kind": "function", "doc": "<p>Returns all employee data from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.addEmployee", "modulename": "api.db.manager_querier", "qualname": "addEmployee", "kind": "function", "doc": "<p>Inserts a new employee into the employee table.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">isManager</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">phoneNumber</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">altEmail</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prefName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">eContact</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">payRate</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">isAdmin</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.updateEmployee", "modulename": "api.db.manager_querier", "qualname": "updateEmployee", "kind": "function", "doc": "<p>Updates the attributes of an existing employee.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">isManager</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">phoneNumber</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">altEmail</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prefName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">eContact</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">payRate</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">isAdmin</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.deleteEmployee", "modulename": "api.db.manager_querier", "qualname": "deleteEmployee", "kind": "function", "doc": "<p>Deletes an employee from the employee table.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.updateUser", "modulename": "api.db.manager_querier", "qualname": "updateUser", "kind": "function", "doc": "<p>Updates the attributes of an existing user.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">userID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getOrders", "modulename": "api.db.manager_querier", "qualname": "getOrders", "kind": "function", "doc": "<p>Retrieves all orders taken during a specific timeframe from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">startDate</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">endDate</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.getOrderItemsByOrderID", "modulename": "api.db.manager_querier", "qualname": "getOrderItemsByOrderID", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.deleteOrder", "modulename": "api.db.manager_querier", "qualname": "deleteOrder", "kind": "function", "doc": "<p>Deletes from order_table</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.manager_querier.deleteOrderParts", "modulename": "api.db.manager_querier", "qualname": "deleteOrderParts", "kind": "function", "doc": "<p>Deletes from order_parts_table</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.menuboard_querier", "modulename": "api.db.menuboard_querier", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.db.menuboard_querier.getMenuItems", "modulename": "api.db.menuboard_querier", "qualname": "getMenuItems", "kind": "function", "doc": "<p>Retrieves all menu items from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.menuboard_querier.getCategoryNames", "modulename": "api.db.menuboard_querier", "qualname": "getCategoryNames", "kind": "function", "doc": "<p>Retrieves all menu category names from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.menuboard_querier.getToppingNames", "modulename": "api.db.menuboard_querier", "qualname": "getToppingNames", "kind": "function", "doc": "<p>Retrieves all topping names from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.menuboard_querier.getMenuItemId", "modulename": "api.db.menuboard_querier", "qualname": "getMenuItemId", "kind": "function", "doc": "<p>Returns a menu item ID based on its name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.menuboard_querier.getMenuCategories", "modulename": "api.db.menuboard_querier", "qualname": "getMenuCategories", "kind": "function", "doc": "<p>Retrieves all menu categories from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.querier", "modulename": "api.db.querier", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.db.querier.getConnection", "modulename": "api.db.querier", "qualname": "getConnection", "kind": "function", "doc": "<p>Gets a connection to our Postgres database</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A connection object to the database</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.db.querier.conn", "modulename": "api.db.querier", "qualname": "conn", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "api.db.querier.DEBUG", "modulename": "api.db.querier", "qualname": "DEBUG", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "api.db.querier.execute", "modulename": "api.db.querier", "qualname": "execute", "kind": "function", "doc": "<p>Queries the database to get some data (or not)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>query</strong>:  Postgres query to execute</li>\n<li><strong>getRet</strong>:  If your query doesn't return anything, set this to True</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>List of tuples</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">getRet</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.employee", "modulename": "api.employee", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.employee.blueprint", "modulename": "api.employee", "qualname": "blueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;employee&#x27;&gt;"}, {"fullname": "api.employee.employee", "modulename": "api.employee.employee", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.employee.employee.employeeBlueprint", "modulename": "api.employee.employee", "qualname": "employeeBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;employee&#x27;&gt;"}, {"fullname": "api.employee.employee.requireLogin", "modulename": "api.employee.employee", "qualname": "requireLogin", "kind": "function", "doc": "<p>Aborts if an unauthorized user attempts to access employee or manager pages.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.employee.home", "modulename": "api.employee.employee", "qualname": "home", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.employee.cashier", "modulename": "api.employee.employee", "qualname": "cashier", "kind": "function", "doc": "<p>Stores menu item, category, topping and weather information before rendering the employee home page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.employee.receive_saved_items", "modulename": "api.employee.employee", "qualname": "receive_saved_items", "kind": "function", "doc": "<p>Orders any items that were previously saved.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.employee.timesheet", "modulename": "api.employee.employee", "qualname": "timesheet", "kind": "function", "doc": "<p>Renders employee timesheet page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.employee.orders", "modulename": "api.employee.employee", "qualname": "orders", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.employee_helper", "modulename": "api.employee.employee_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.employee.employee_helper.getMenuData", "modulename": "api.employee.employee_helper", "qualname": "getMenuData", "kind": "function", "doc": "<p>Returns all menu items from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.employee_helper.getMenuCategories", "modulename": "api.employee.employee_helper", "qualname": "getMenuCategories", "kind": "function", "doc": "<p>Returns all menu categories from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.employee_helper.getToppingData", "modulename": "api.employee.employee_helper", "qualname": "getToppingData", "kind": "function", "doc": "<p>Returns all topping names from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.employee_helper.getToppingNames", "modulename": "api.employee.employee_helper", "qualname": "getToppingNames", "kind": "function", "doc": "<p>Returns all topping names from the database stored in list format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"p\">[]</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.employee.employee_helper.placeOrder", "modulename": "api.employee.employee_helper", "qualname": "placeOrder", "kind": "function", "doc": "<p>Executes the placing of an order. Updates order table and inventory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">menuItems</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.employee_helper.getWeather", "modulename": "api.employee.employee_helper", "qualname": "getWeather", "kind": "function", "doc": "<p>Retrieves the weather data for College Station.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.orders", "modulename": "api.employee.orders", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.employee.orders.ordersAPIBlueprint", "modulename": "api.employee.orders", "qualname": "ordersAPIBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;orders&#x27;&gt;"}, {"fullname": "api.employee.orders.orderData", "modulename": "api.employee.orders", "qualname": "orderData", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.orders.orderPart", "modulename": "api.employee.orders", "qualname": "orderPart", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.orders.orderMark", "modulename": "api.employee.orders", "qualname": "orderMark", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.orders.orderDelete", "modulename": "api.employee.orders", "qualname": "orderDelete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.orders_helper", "modulename": "api.employee.orders_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.employee.orders_helper.getOrders", "modulename": "api.employee.orders_helper", "qualname": "getOrders", "kind": "function", "doc": "<p>Gets orders from range [startDate, endDate)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.orders_helper.getOrderItems", "modulename": "api.employee.orders_helper", "qualname": "getOrderItems", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.orders_helper.markOrder", "modulename": "api.employee.orders_helper", "qualname": "markOrder", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.orders_helper.deleteOrder", "modulename": "api.employee.orders_helper", "qualname": "deleteOrder", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.timesheet", "modulename": "api.employee.timesheet", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.employee.timesheet.timesheetAPIBlueprint", "modulename": "api.employee.timesheet", "qualname": "timesheetAPIBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;timesheet&#x27;&gt;"}, {"fullname": "api.employee.timesheet.clockIn", "modulename": "api.employee.timesheet", "qualname": "clockIn", "kind": "function", "doc": "<p>Clocks in an employee based on their ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.timesheet.clockOut", "modulename": "api.employee.timesheet", "qualname": "clockOut", "kind": "function", "doc": "<p>Clocks out an employee based on their ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.timesheet.week", "modulename": "api.employee.timesheet", "qualname": "week", "kind": "function", "doc": "<p>Retrieves a week of activity for a specific employee based on their ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.timesheet_helper", "modulename": "api.employee.timesheet_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.employee.timesheet_helper.clockInHelper", "modulename": "api.employee.timesheet_helper", "qualname": "clockInHelper", "kind": "function", "doc": "<p>Clock in, rounding to the nearest quarter-hour</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">activity</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.timesheet_helper.clockOutHelper", "modulename": "api.employee.timesheet_helper", "qualname": "clockOutHelper", "kind": "function", "doc": "<p>Clock out, rounding to the nearest quarter-hour</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.timesheet_helper.getWeek", "modulename": "api.employee.timesheet_helper", "qualname": "getWeek", "kind": "function", "doc": "<p>Returns a week of activity for a specific employee based on their ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span>, </span><span class=\"param\"><span class=\"n\">billingPeriod</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.employee.timesheet_helper.getBillingPeriods", "modulename": "api.employee.timesheet_helper", "qualname": "getBillingPeriods", "kind": "function", "doc": "<p>Retrieves billing periods from start date to present date.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sinceYear</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2023</span>, </span><span class=\"param\"><span class=\"n\">sinceMonth</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">sinceDay</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager", "modulename": "api.manager", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.blueprint", "modulename": "api.manager", "qualname": "blueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;manager&#x27;&gt;"}, {"fullname": "api.manager.analytics", "modulename": "api.manager.analytics", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.analytics.analyticsAPIBlueprint", "modulename": "api.manager.analytics", "qualname": "analyticsAPIBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;analytics&#x27;&gt;"}, {"fullname": "api.manager.analytics.productUsage", "modulename": "api.manager.analytics", "qualname": "productUsage", "kind": "function", "doc": "<p>Sets up an endpoint for the product usage report. \nReturns the jsonification of the product usage query to\nbe displayed. Can specify the dates or use the default \nvalue of the last 7 days.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.analytics.salesHistory", "modulename": "api.manager.analytics", "qualname": "salesHistory", "kind": "function", "doc": "<p>Sets up an endpoint for the sales history report. \nReturns the jsonification of the sales history query to\nbe displayed. Can specify the dates or use the default \nvalue of the last 7 days.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.analytics.excessItems", "modulename": "api.manager.analytics", "qualname": "excessItems", "kind": "function", "doc": "<p>Sets up an endpoint for the excess items report. \nReturns the jsonification of the excess items query to\nbe displayed. Can specify the date or use the default \nvalue of 7 days ago.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.analytics.pairFrequency", "modulename": "api.manager.analytics", "qualname": "pairFrequency", "kind": "function", "doc": "<p>Sets up an endpoint for the pair frequency report. \nReturns the jsonification of the pair frequency query to\nbe displayed. Can specify the dates or use the default \nvalue of the last 7 days.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.analytics_helper", "modulename": "api.manager.analytics_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.analytics_helper.getProductUsage", "modulename": "api.manager.analytics_helper", "qualname": "getProductUsage", "kind": "function", "doc": "<p>Calls the querier and returns the result of the product usage query</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">startDate</span>, </span><span class=\"param\"><span class=\"n\">endDate</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.analytics_helper.getSalesHistory", "modulename": "api.manager.analytics_helper", "qualname": "getSalesHistory", "kind": "function", "doc": "<p>Calls the querier and returns the result of the sales history query</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">startDate</span>, </span><span class=\"param\"><span class=\"n\">endDate</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.analytics_helper.getExcessItems", "modulename": "api.manager.analytics_helper", "qualname": "getExcessItems", "kind": "function", "doc": "<p>Calls the querier and returns the result of the excess items query</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">startDate</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.analytics_helper.getPairFrequency", "modulename": "api.manager.analytics_helper", "qualname": "getPairFrequency", "kind": "function", "doc": "<p>Calls the querier and returns the result of the pair frequency query</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">startDate</span>, </span><span class=\"param\"><span class=\"n\">endDate</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.image", "modulename": "api.manager.image", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.image.imageAPIBlueprint", "modulename": "api.manager.image", "qualname": "imageAPIBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;images&#x27;&gt;"}, {"fullname": "api.manager.image.upload", "modulename": "api.manager.image", "qualname": "upload", "kind": "function", "doc": "<p>Sets up an endpoint uploading images.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.image.delete", "modulename": "api.manager.image", "qualname": "delete", "kind": "function", "doc": "<p>Sets up an endpoint for deleting images.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.image.update", "modulename": "api.manager.image", "qualname": "update", "kind": "function", "doc": "<p>Sets up an endpoint for updating images.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.image.get", "modulename": "api.manager.image", "qualname": "get", "kind": "function", "doc": "<p>Sets up an endpoint to get the images. Returns\na jsonification of the resulting query.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.image_helper", "modulename": "api.manager.image_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.image_helper.ALLOWED_EXTENSIONS", "modulename": "api.manager.image_helper", "qualname": "ALLOWED_EXTENSIONS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;png&#x27;, &#x27;jpg&#x27;, &#x27;svg&#x27;, &#x27;jpeg&#x27;]"}, {"fullname": "api.manager.image_helper.imageUpload", "modulename": "api.manager.image_helper", "qualname": "imageUpload", "kind": "function", "doc": "<p>Returns true if the image can be uploaded.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"n\">werkzeug</span><span class=\"o\">.</span><span class=\"n\">datastructures</span><span class=\"o\">.</span><span class=\"n\">file_storage</span><span class=\"o\">.</span><span class=\"n\">FileStorage</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.manager.image_helper.imageUpdate", "modulename": "api.manager.image_helper", "qualname": "imageUpdate", "kind": "function", "doc": "<p>Calls the querier to update an image entry in the database</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">imageID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.image_helper.imageDelete", "modulename": "api.manager.image_helper", "qualname": "imageDelete", "kind": "function", "doc": "<p>Deletes image from database and image CDN. May take a few minutes to invalidate cached images.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">imageID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">publicID</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.image_helper.imageGet", "modulename": "api.manager.image_helper", "qualname": "imageGet", "kind": "function", "doc": "<p>Calls the querier and returns the image from the database</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory", "modulename": "api.manager.inventory", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.inventory.inventoryAPIBlueprint", "modulename": "api.manager.inventory", "qualname": "inventoryAPIBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;inventory&#x27;&gt;"}, {"fullname": "api.manager.inventory.inventoryOrder", "modulename": "api.manager.inventory", "qualname": "inventoryOrder", "kind": "function", "doc": "<p>Sets up an endpoint for ordering items in the inventory. \nCalls orderItems with provided amount and items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory.inventoryOrderAll", "modulename": "api.manager.inventory", "qualname": "inventoryOrderAll", "kind": "function", "doc": "<p>Sets up an endpoint for ordering all items in the inventory. \nCalls orderAllItems with the provided amount.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory.inventoryStock", "modulename": "api.manager.inventory", "qualname": "inventoryStock", "kind": "function", "doc": "<p>Sets up an endpoint for inventory stock. \nCalls low stock if inventory is low, else gets the inventory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory.inventoryThreshold", "modulename": "api.manager.inventory", "qualname": "inventoryThreshold", "kind": "function", "doc": "<p>Sets up an endpoint for the inventory threshold.\nCalls updateThresholds with the provided names and thresholds.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory.inventoryDelete", "modulename": "api.manager.inventory", "qualname": "inventoryDelete", "kind": "function", "doc": "<p>Sets up an endpoint to delete items from the database.\nCalls deleteInventoryItem with the provided id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory.inventoryUpdate", "modulename": "api.manager.inventory", "qualname": "inventoryUpdate", "kind": "function", "doc": "<p>Sets up an endpoint to update items in the inventory.\nCalls updateInventoryItem with the provided id, name, quantity, and threshold.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory.inventoryAdd", "modulename": "api.manager.inventory", "qualname": "inventoryAdd", "kind": "function", "doc": "<p>Sets up an endpoint to add inventory items to the database.\nCalls addinventoryItem with the provided name, quantity, and restock threshold.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory_helper", "modulename": "api.manager.inventory_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.inventory_helper.getInventory", "modulename": "api.manager.inventory_helper", "qualname": "getInventory", "kind": "function", "doc": "<p>Calls the querier and returns the inventory from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory_helper.addInventoryItem", "modulename": "api.manager.inventory_helper", "qualname": "addInventoryItem", "kind": "function", "doc": "<p>Calls the querier and adds an inventory item to the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">quantity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">restockThreshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory_helper.updateInventoryItem", "modulename": "api.manager.inventory_helper", "qualname": "updateInventoryItem", "kind": "function", "doc": "<p>Calls the querier and updates an inventory item in the database.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">inventoryID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">quantity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">restockThreshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory_helper.deleteInventoryItem", "modulename": "api.manager.inventory_helper", "qualname": "deleteInventoryItem", "kind": "function", "doc": "<p>Calls the querier and deletes an inventory item in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inventoryID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory_helper.getLowStock", "modulename": "api.manager.inventory_helper", "qualname": "getLowStock", "kind": "function", "doc": "<p>Calls the querier and returns the items with low stock in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory_helper.orderItems", "modulename": "api.manager.inventory_helper", "qualname": "orderItems", "kind": "function", "doc": "<p>Calls the querier and updates the items' inventory quantities in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\">names: [&lt;class &#x27;str&#x27;&gt;]</span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory_helper.orderAllItems", "modulename": "api.manager.inventory_helper", "qualname": "orderAllItems", "kind": "function", "doc": "<p>Calls the querier and updates all inventory items quantities in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory_helper.updateThresholds", "modulename": "api.manager.inventory_helper", "qualname": "updateThresholds", "kind": "function", "doc": "<p>Updates the thresholds of inventory items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\">names: [&lt;class &#x27;str&#x27;&gt;], </span><span class=\"param\"><span class=\"n\">amount</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.inventory_helper.updateThreshold", "modulename": "api.manager.inventory_helper", "qualname": "updateThreshold", "kind": "function", "doc": "<p>Calls the querier and updates the thresholds of items in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.manager", "modulename": "api.manager.manager", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.manager.managerBlueprint", "modulename": "api.manager.manager", "qualname": "managerBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;manager&#x27;&gt;"}, {"fullname": "api.manager.manager.requireLogin", "modulename": "api.manager.manager", "qualname": "requireLogin", "kind": "function", "doc": "<p>Checks to ensure the user is authenticated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.manager.home", "modulename": "api.manager.manager", "qualname": "home", "kind": "function", "doc": "<p>Sets up an endpoint for the default manager page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.manager.analytics", "modulename": "api.manager.manager", "qualname": "analytics", "kind": "function", "doc": "<p>Sets up an endpoint for the manager analytics page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.manager.employees", "modulename": "api.manager.manager", "qualname": "employees", "kind": "function", "doc": "<p>Sets up an endpoint for the manager user management page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.manager.inventory", "modulename": "api.manager.manager", "qualname": "inventory", "kind": "function", "doc": "<p>Sets up an endpoint for the manager inventory page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.manager.menu", "modulename": "api.manager.manager", "qualname": "menu", "kind": "function", "doc": "<p>Sets up an endpoint for the manager menu page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.manager.orders", "modulename": "api.manager.manager", "qualname": "orders", "kind": "function", "doc": "<p>Sets up an endpoint for the manager orders page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.manager.payroll", "modulename": "api.manager.manager", "qualname": "payroll", "kind": "function", "doc": "<p>Sets up an endpoint for the manager payroll page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.manager_helper", "modulename": "api.manager.manager_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.menu", "modulename": "api.manager.menu", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.menu.menuAPIBlueprint", "modulename": "api.manager.menu", "qualname": "menuAPIBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;menu&#x27;&gt;"}, {"fullname": "api.manager.menu.menuItems", "modulename": "api.manager.menu", "qualname": "menuItems", "kind": "function", "doc": "<p>Sets up an endpoint for the menu items.\nHandles methods for adding, updating, and deleting\nmenu items. Returns statuses, or a jsonification\nof the getMenuItems query.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu.ingredients", "modulename": "api.manager.menu", "qualname": "ingredients", "kind": "function", "doc": "<p>Sets up an endpoint for the menu item ingredients.\nHandles methods for adding, updating, and deleting\nmenu item ingredients. Returns statuses, or a jsonification\nof the getIngredients query.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu.categories", "modulename": "api.manager.menu", "qualname": "categories", "kind": "function", "doc": "<p>Sets up an endpoint for the menu item categories.\nHandles methods for adding and updating menu item\ncategories. Returns statuses, or a jsonification\nof the getMenuCategories query.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu_helper", "modulename": "api.manager.menu_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.menu_helper.getMenuItems", "modulename": "api.manager.menu_helper", "qualname": "getMenuItems", "kind": "function", "doc": "<p>Calls the querier and returns the menu items from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu_helper.getIngredients", "modulename": "api.manager.menu_helper", "qualname": "getIngredients", "kind": "function", "doc": "<p>Calls the querier and returns the item ingredients from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">itemId</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu_helper.addMenuItem", "modulename": "api.manager.menu_helper", "qualname": "addMenuItem", "kind": "function", "doc": "<p>Calls the querier and adds a menu item to the database.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">price</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">inStock</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">calories</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">imageID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu_helper.delMenuItem", "modulename": "api.manager.menu_helper", "qualname": "delMenuItem", "kind": "function", "doc": "<p>Calls the querier and deletes a menu item from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">itemID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu_helper.updateMenuItem", "modulename": "api.manager.menu_helper", "qualname": "updateMenuItem", "kind": "function", "doc": "<p>Calls the querier and updates a menu item in the database.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">price</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">inStock</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">calories</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">itemID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">imageID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu_helper.addIngredient", "modulename": "api.manager.menu_helper", "qualname": "addIngredient", "kind": "function", "doc": "<p>Calls the querier and adds a menu item ingredient to the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">menuItemID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">quantity</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu_helper.delIngredient", "modulename": "api.manager.menu_helper", "qualname": "delIngredient", "kind": "function", "doc": "<p>Calls the querier and deletes a menu item ingredient from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">uniqueID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu_helper.updateIngredient", "modulename": "api.manager.menu_helper", "qualname": "updateIngredient", "kind": "function", "doc": "<p>Calls the querier and updates a menu item ingredient in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">quantity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">ingredientID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu_helper.getMenuCategories", "modulename": "api.manager.menu_helper", "qualname": "getMenuCategories", "kind": "function", "doc": "<p>Calls the querier and returns the menu item categories from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu_helper.addMenuCategories", "modulename": "api.manager.menu_helper", "qualname": "addMenuCategories", "kind": "function", "doc": "<p>Calls the querier and adds a menu item category to the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\">categories: [&lt;class &#x27;str&#x27;&gt;]</span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.menu_helper.updateMenuCategoriesOrder", "modulename": "api.manager.menu_helper", "qualname": "updateMenuCategoriesOrder", "kind": "function", "doc": "<p>Calls the querier and updates the order of the menu item categories in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\">categories: [&lt;class &#x27;str&#x27;&gt;]</span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.orders", "modulename": "api.manager.orders", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.orders.ordersAPIBlueprint", "modulename": "api.manager.orders", "qualname": "ordersAPIBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;orders&#x27;&gt;"}, {"fullname": "api.manager.orders.orderData", "modulename": "api.manager.orders", "qualname": "orderData", "kind": "function", "doc": "<p>Sets up an endpoint to retrieve order data.\nGets data in the range of startDate to endDate.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.orders.orderPart", "modulename": "api.manager.orders", "qualname": "orderPart", "kind": "function", "doc": "<p>Sets up an endpoint to retrieve order part data.\nGets data by the order id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.orders.orderDelete", "modulename": "api.manager.orders", "qualname": "orderDelete", "kind": "function", "doc": "<p>Sets up an endpoint to delete order data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.orders_helper", "modulename": "api.manager.orders_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.orders_helper.getOrders", "modulename": "api.manager.orders_helper", "qualname": "getOrders", "kind": "function", "doc": "<p>Gets orders from range [startDate, endDate)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">startDate</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">endDate</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.orders_helper.getOrderItems", "modulename": "api.manager.orders_helper", "qualname": "getOrderItems", "kind": "function", "doc": "<p>Calls the querier and gets orders by order id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.orders_helper.deleteOrder", "modulename": "api.manager.orders_helper", "qualname": "deleteOrder", "kind": "function", "doc": "<p>Calls the querier and deletes orders by order id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orderID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll", "modulename": "api.manager.payroll", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.payroll.payrollAPIBlueprint", "modulename": "api.manager.payroll", "qualname": "payrollAPIBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;payroll&#x27;&gt;"}, {"fullname": "api.manager.payroll.checkAdmin", "modulename": "api.manager.payroll", "qualname": "checkAdmin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll.timesheet", "modulename": "api.manager.payroll", "qualname": "timesheet", "kind": "function", "doc": "<p>Sets up an endpoint for the timesheet.\nReturns josnifications of the default timesheet\nor a specific employee's timesheet.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll.timesheetAdd", "modulename": "api.manager.payroll", "qualname": "timesheetAdd", "kind": "function", "doc": "<p>Sets up an endpoint to add entries to a timesheet.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll.timesheetUpdate", "modulename": "api.manager.payroll", "qualname": "timesheetUpdate", "kind": "function", "doc": "<p>Sets up an endpoint to update timesheet entries.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll.timesheetDelete", "modulename": "api.manager.payroll", "qualname": "timesheetDelete", "kind": "function", "doc": "<p>Sets up an endpoint to delete timesheet entries.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll.employeeHours", "modulename": "api.manager.payroll", "qualname": "employeeHours", "kind": "function", "doc": "<p>Sets up an endpoint to get an employee's hours.\nReturns a jsonification of the getTotalHours query.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll.employeePayRate", "modulename": "api.manager.payroll", "qualname": "employeePayRate", "kind": "function", "doc": "<p>Sets up an endpoint to get an employee's pay rate.\nReturns a jsonification of the getPayRate query.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll.payEmployee", "modulename": "api.manager.payroll", "qualname": "payEmployee", "kind": "function", "doc": "<p>Sets up an endpoint to pay employees by id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll_helper", "modulename": "api.manager.payroll_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.payroll_helper.getTimesheet", "modulename": "api.manager.payroll_helper", "qualname": "getTimesheet", "kind": "function", "doc": "<p>Calls the querier and returns the timesheet from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll_helper.getTimesheetByID", "modulename": "api.manager.payroll_helper", "qualname": "getTimesheetByID", "kind": "function", "doc": "<p>Calls the querier and returns the timesheet by employeeID and period from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">billingPeriod</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll_helper.addTimesheetEntry", "modulename": "api.manager.payroll_helper", "qualname": "addTimesheetEntry", "kind": "function", "doc": "<p>Calls the querier and adds a timesheet entry to the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">activity</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">clockIn</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">clockOut</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll_helper.updateTimesheetEntry", "modulename": "api.manager.payroll_helper", "qualname": "updateTimesheetEntry", "kind": "function", "doc": "<p>Calls the querier and updates a timesheet entry in the database.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">entryID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">activity</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">clockIn</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">clockOut</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll_helper.deleteTimesheetEntry", "modulename": "api.manager.payroll_helper", "qualname": "deleteTimesheetEntry", "kind": "function", "doc": "<p>Calls the querier and deletes a timesheet entry from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">entryID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll_helper.getEmployees", "modulename": "api.manager.payroll_helper", "qualname": "getEmployees", "kind": "function", "doc": "<p>Calls the querier and returns the employees on payroll from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll_helper.getTotalHours", "modulename": "api.manager.payroll_helper", "qualname": "getTotalHours", "kind": "function", "doc": "<p>Calls the querier and returns the total hours for an employee over a period from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">billingPeriod</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll_helper.getPayRate", "modulename": "api.manager.payroll_helper", "qualname": "getPayRate", "kind": "function", "doc": "<p>Calls the querier and returns the pay rate of a specific employee.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll_helper.payEmployeeByID", "modulename": "api.manager.payroll_helper", "qualname": "payEmployeeByID", "kind": "function", "doc": "<p>Pays employees by their id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">totalPayment</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.manager.payroll_helper.getBillingPeriods", "modulename": "api.manager.payroll_helper", "qualname": "getBillingPeriods", "kind": "function", "doc": "<p>Gets the 2 week billing periods over the period.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sinceYear</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2023</span>, </span><span class=\"param\"><span class=\"n\">sinceMonth</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">sinceDay</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management", "modulename": "api.manager.user_management", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.user_management.userManagementBlueprint", "modulename": "api.manager.user_management", "qualname": "userManagementBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;userManagement&#x27;&gt;"}, {"fullname": "api.manager.user_management.users", "modulename": "api.manager.user_management", "qualname": "users", "kind": "function", "doc": "<p>Sets up an endpoint to get the users.\nReturns a jsonification of the getUsers query.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management.employees", "modulename": "api.manager.user_management", "qualname": "employees", "kind": "function", "doc": "<p>Sets up an endpoint to get the employees.\nReturns a jsonification of the getEmployees query.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management.employeeUpdate", "modulename": "api.manager.user_management", "qualname": "employeeUpdate", "kind": "function", "doc": "<p>Sets up an endpoint to update an employee's information.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management.employeeAdd", "modulename": "api.manager.user_management", "qualname": "employeeAdd", "kind": "function", "doc": "<p>Sets up an endpoint to add an employee to the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management.employeeDelete", "modulename": "api.manager.user_management", "qualname": "employeeDelete", "kind": "function", "doc": "<p>Sets up an endpoint to delete an employee from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management.checkAdmin", "modulename": "api.manager.user_management", "qualname": "checkAdmin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management_helper", "modulename": "api.manager.user_management_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.manager.user_management_helper.getUsers", "modulename": "api.manager.user_management_helper", "qualname": "getUsers", "kind": "function", "doc": "<p>Calls the querier and returns the users from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management_helper.getEmployees", "modulename": "api.manager.user_management_helper", "qualname": "getEmployees", "kind": "function", "doc": "<p>Calls the querier and returns the employees from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management_helper.updateUser", "modulename": "api.manager.user_management_helper", "qualname": "updateUser", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management_helper.addUser", "modulename": "api.manager.user_management_helper", "qualname": "addUser", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management_helper.updateEmployeeByID", "modulename": "api.manager.user_management_helper", "qualname": "updateEmployeeByID", "kind": "function", "doc": "<p>Calls the querier and updates an employee's information in the database.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">isManager</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">phoneNumber</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">altEmail</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prefName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">eContact</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">payRate</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">isAdmin</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management_helper.deleteEmployeeByID", "modulename": "api.manager.user_management_helper", "qualname": "deleteEmployeeByID", "kind": "function", "doc": "<p>Calls the querier and deleted an employee by id from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">employeeID</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.manager.user_management_helper.addEmployee", "modulename": "api.manager.user_management_helper", "qualname": "addEmployee", "kind": "function", "doc": "<p>Calls the querier and adds an employee to the database.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">isManager</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">phoneNumber</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">altEmail</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prefName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">eContact</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">payRate</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">isAdmin</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.menuboard", "modulename": "api.menuboard", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.menuboard.blueprint", "modulename": "api.menuboard", "qualname": "blueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;menuboard&#x27;&gt;"}, {"fullname": "api.menuboard.menuboard", "modulename": "api.menuboard.menuboard", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.menuboard.menuboard.menuboardBlueprint", "modulename": "api.menuboard.menuboard", "qualname": "menuboardBlueprint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Blueprint &#x27;menuboard&#x27;&gt;"}, {"fullname": "api.menuboard.menuboard.home", "modulename": "api.menuboard.menuboard", "qualname": "home", "kind": "function", "doc": "<p>Stores menu item and category information before rendering the menuboard page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.menuboard.menuboard_helper", "modulename": "api.menuboard.menuboard_helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "api.menuboard.menuboard_helper.getMenuData", "modulename": "api.menuboard.menuboard_helper", "qualname": "getMenuData", "kind": "function", "doc": "<p>Returns all menu items from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "api.menuboard.menuboard_helper.getMenuCategories", "modulename": "api.menuboard.menuboard_helper", "qualname": "getMenuCategories", "kind": "function", "doc": "<p>Returns all menu category names from the database in order of priority.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"p\">[]</span>:</span></span>", "funcdef": "def"}, {"fullname": "api.menuboard.menuboard_helper.getToppingNames", "modulename": "api.menuboard.menuboard_helper", "qualname": "getToppingNames", "kind": "function", "doc": "<p>Returns all topping names from the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"p\">[]</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();